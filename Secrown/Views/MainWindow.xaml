<Window x:Class="Secrown.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Secrown"
        xmlns:shell="http://schemas.microsoft.com/netfx/2009/xaml/presentation"
        xmlns:wv2="clr-namespace:Microsoft.Web.WebView2.Wpf;assembly=Microsoft.Web.WebView2.Wpf"
        mc:Ignorable="d"
        DataContext="{StaticResource MainWindow}"
        Title="MainWindow" Height="768" Width="1366" 
        WindowStartupLocation="CenterScreen" WindowStyle="None" AllowsTransparency="False" 
        Style="{DynamicResource WindowTemplate}" Loaded="Window_Loaded">
    <shell:WindowChrome.WindowChrome>
        <shell:WindowChrome
            ResizeBorderThickness="5"
            CaptionHeight="30"
            CornerRadius="0,0,0,0"
            GlassFrameThickness="0">
        </shell:WindowChrome>
    </shell:WindowChrome.WindowChrome>
    <Window.CommandBindings>
        <CommandBinding Command="{x:Static SystemCommands.MinimizeWindowCommand}" CanExecute="CommandBinding_CanExecute" Executed="Minimize_Executed"/>
        <CommandBinding Command="{x:Static SystemCommands.MaximizeWindowCommand}" CanExecute="CommandBinding_CanExecute" Executed="Maximize_Executed"/>
        <CommandBinding Command="{x:Static SystemCommands.RestoreWindowCommand}" CanExecute="CommandBinding_CanExecute" Executed="Restore_Executed"/>
        <CommandBinding Command="{x:Static SystemCommands.CloseWindowCommand}" CanExecute="CommandBinding_CanExecute" Executed="Close_Executed"/>
    </Window.CommandBindings>
    <Window.Resources>
        <Style x:Key="TitleBarGeneralButtonStyle" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="LayoutRoot" Background="Transparent" Width="44" Height="30">
                            <TextBlock x:Name="Text" Text="{TemplateBinding Content}" FontFamily="Segoe MDL2 Assets" 
                                   FontSize="{TemplateBinding FontSize}" Padding="{TemplateBinding Padding}" 
                                   Foreground="#818183" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                   RenderOptions.ClearTypeHint="Auto" TextOptions.TextRenderingMode="Aliased" TextOptions.TextFormattingMode="Display"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="LayoutRoot" Property="Background" Value="#E5E5E5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TitleBarCloseButtonStyle" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="LayoutRoot" Background="Transparent" Width="44" Height="30">
                            <TextBlock x:Name="Text" Text="{TemplateBinding Content}" FontFamily="Segoe MDL2 Assets" 
                                   FontSize="{TemplateBinding FontSize}" Padding="{TemplateBinding Padding}" 
                                   Foreground="#818183" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                   RenderOptions.ClearTypeHint="Auto" TextOptions.TextRenderingMode="Aliased" TextOptions.TextFormattingMode="Display"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="LayoutRoot" Property="Background" Value="#E50914"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="NormalButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource LightBlue}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <Style x:Key="WindowTemplate" TargetType="Window">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Window">
                        <Grid>
                            <Border x:Name="WindowBorder">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
                                                <Setter Property="Padding" Value="6"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <Grid x:Name="LayoutRoot">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="30"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Grid x:Name="TitleBar" Grid.Row="0" Background="{StaticResource SemiBlack}">
                                        <Image Source="/Assets/Icons/crown.ico" Width="20" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,10,2"/>
                                        <TextBlock Text="Secrown" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="40,0,0,0" Foreground="{StaticResource LightGray}"/>
                                        <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                            <Button x:Name="LockButton" WindowChrome.IsHitTestVisibleInChrome="True" FontSize="10" Content="&#xE72E;" Command="{Binding LockCommand}" ToolTip="Lock" Style="{StaticResource TitleBarGeneralButtonStyle}"/>
                                            <Button x:Name="MinimizeButton" WindowChrome.IsHitTestVisibleInChrome="True" FontSize="10" Content="&#xE921;" Command="{x:Static SystemCommands.MinimizeWindowCommand}" ToolTip="Minimize" Style="{StaticResource TitleBarGeneralButtonStyle}"/>
                                            <Button x:Name="MaximizeButton" WindowChrome.IsHitTestVisibleInChrome="True" FontSize="10" Content="&#xE922;" Command="{x:Static SystemCommands.MaximizeWindowCommand}" ToolTip="Maximize">
                                                <Button.Style>
                                                    <Style TargetType="Button" BasedOn="{StaticResource TitleBarGeneralButtonStyle}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=WindowState}" Value="Normal">
                                                                <Setter Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                            <Button x:Name="RestoreButton" WindowChrome.IsHitTestVisibleInChrome="True" FontSize="10" Content="&#xE923;" Command="{x:Static SystemCommands.RestoreWindowCommand}" ToolTip="Restore">
                                                <Button.Style>
                                                    <Style TargetType="Button" BasedOn="{StaticResource TitleBarGeneralButtonStyle}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
                                                                <Setter Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=WindowState}" Value="Normal">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                            <Button x:Name="CloseButton" WindowChrome.IsHitTestVisibleInChrome="True" FontSize="10" Content="&#xE106;" Command="{x:Static SystemCommands.CloseWindowCommand}" ToolTip="Close" Style="{StaticResource TitleBarCloseButtonStyle}"/>
                                        </StackPanel>
                                    </Grid>
                                    <Border Grid.Row="1" BorderBrush="{StaticResource SemiBlack}" BorderThickness="1,0,1,1">
                                        <Grid >
                                            <AdornerDecorator>
                                                <ContentPresenter/>
                                            </AdornerDecorator>
                                        </Grid>
                                    </Border>
                                </Grid>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Background="White">
        <!--FocusManager.FocusedElement="{Binding ElementName=PasswordBoxPassCode}"-->
        <Grid x:Name="LockGrid" Background="White" Visibility="{Binding IsLock, Converter={StaticResource BooleanToVisibility}}" IsVisibleChanged="LockGrid_IsVisibleChanged">
            <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <PasswordBox x:Name="PasswordBoxPassCode" Grid.Column="0" VerticalContentAlignment="Center" Width="150" Height="30" FontSize="14" Margin="0,0,2,0" Focusable="True">
                    <PasswordBox.Style>
                        <Style TargetType="{x:Type PasswordBox}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                                        <Border x:Name="PasswordBoxBorder" CornerRadius="5,0,0,5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                            <ScrollViewer x:Name="PART_ContentHost" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" TargetName="PasswordBoxBorder" Value="0.5"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter Property="BorderBrush" TargetName="PasswordBoxBorder" Value="{StaticResource Blue}"/>
                                            </Trigger>
                                            <Trigger Property="IsKeyboardFocused" Value="true">
                                                <Setter Property="BorderBrush" TargetName="PasswordBoxBorder" Value="{StaticResource DarkBlue}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                                        <Condition Property="IsSelectionActive" Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                </MultiTrigger>
                            </Style.Triggers>
                        </Style>
                    </PasswordBox.Style>
                </PasswordBox>
                <Button x:Name="ButtonUnLock" Grid.Column="1" Width="75" Height="30" Content="Unlock" Background="{StaticResource LightBlue}" Foreground="White" BorderThickness="0">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border x:Name="ButtonUnLockBorder" CornerRadius="0,5,5,0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Cursor="Hand">
                                            <ContentPresenter x:Name="ButtonContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" TargetName="ButtonUnLockBorder" Value="0.5"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="ButtonUnLockBorder" Value="{StaticResource Blue}"/>
                                            </Trigger>
                                            <Trigger Property="IsKeyboardFocused" Value="True">
                                                <Setter Property="Background" TargetName="ButtonUnLockBorder" Value="{StaticResource DarkBlue}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>
        </Grid>
        <TabControl Visibility="{Binding IsUnlock, Converter={StaticResource BooleanToVisibility}}" BorderThickness="0">
            <TabItem x:Name="TabZalo" Header="Zalo" Padding="14,2">
                <wv2:WebView2 x:Name="WebViewZalo"/>
            </TabItem>
            <TabItem x:Name="Messenger" Header="Messenger" Padding="14,2">
                <wv2:WebView2 x:Name="WebViewMessenger"/>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
